name: Docker Compose Pipeline with GitHub Pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Build and run application containers with output capture
        run: |
          {
            echo "=== Application Stack ==="
            echo
            echo "=== Docker Compose Build (Application) ==="
            echo
            docker-compose build
            echo
            echo "=== Docker Compose Up (Application) ==="
            echo
            docker-compose up -d
            echo
            echo "=== Application Container Status ==="
            echo
            docker-compose ps
            echo
            echo "=== Application Container Logs ==="
            echo
            docker-compose logs
            echo
            echo "=== Application Health Checks ==="
            echo
            echo "Checking backend health..."
            curl -v http://localhost:8000/ || echo "Backend health check failed"
            echo
            echo "Checking frontend availability..."
            curl -v -I http://localhost:80/ || echo "Frontend health check failed"
            echo
            echo "=== Monitoring Stack ==="
            echo
            echo "=== Docker Compose Build (Monitoring) ==="
            echo
            cd monitoring
            docker-compose build
            echo
            echo "=== Docker Compose Up (Monitoring) ==="
            echo
            docker-compose up -d
            echo
            echo "=== Monitoring Container Status ==="
            echo
            docker-compose ps
            echo
            echo "=== Monitoring Container Logs ==="
            echo
            docker-compose logs
            echo
            echo "=== Monitoring Health Checks ==="
            echo
            echo "Checking Prometheus..."
            curl -v http://localhost:9090/-/healthy || echo "Prometheus health check failed"
            echo
            echo "Checking Grafana..."
            curl -v http://localhost:3000/api/health || echo "Grafana health check failed"
          } 2>&1 | tee docker-compose-output.log

      - name: Generate HTML report
        run: |
          python .github/scripts/generate_report.py < docker-compose-output.log

      - name: Stop containers
        if: always()
        run: docker-compose down

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'report'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-run
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4